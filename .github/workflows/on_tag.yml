name: Deploy to [staging/prod]
on:
  push:
    tags:
      - staging
      - prod
jobs:
  deploy-staging:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.7
        uses: actions/setup-python@v4
        with:
          python-version: 3.7

      - name: Install dependencies
        run: pip install -r ./training_pipeline/requirements.txt

      - name: Login to [staging] account
        if: startsWith(github.ref, 'refs/tags/staging')
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: eu-west-3
          role-to-assume: arn:aws:iam::381667332649:role/381667332649-github-full-access

      - name: Login to [prod] account
        if: startsWith(github.ref, 'refs/tags/prod')
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: eu-west-3
          role-to-assume: arn:aws:iam::343975642840:role/343975642840-github-full-access

      - name: Perform Action with Tag Name
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF}"
          echo ${{ github.ref }}


      - name: Build all resources in ${{ github.ref }}" with terraform
        working-directory: ./terraform/main
        run: |
          terraform init
          terraform workspace select ${{ github.ref }}
          terraform apply -auto-approve --var-file environment/${{ github.ref }}.tfvars

      - name: Upload training data to S3 bucket
        working-directory: ./training_pipeline
        run: python upload_dataset.py

      - name: Create training pipeline in ${{ env.GITHUB_REF }}
        working-directory: ./training_pipeline
        run: python training_pipeline.py --action create
